#!/usr/bin/env python3

# A simple script for finding duplicate photos

# Copyright 2016 Jonathan Koren <jonathan@jonathankoren.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.


import os
import os.path
import sys

def listFiles(dir):
  '''Perform a depth first search of the specified
  directory and return a list of all files found.'''
  l = list()
  basedir = dir
  subdirlist = []
  for item in os.listdir(dir):
    if os.path.isfile(os.path.join(basedir,item)):
      l.append(os.path.join(basedir, item))
    else:
      subdirlist.append(os.path.join(basedir, item))
  for subdir in subdirlist:
    if subdir[0] != '.':
      l = l + listFiles(subdir)
  return l


###############################################################################

allNames = {}
for fullpath in listFiles(sys.argv[1]):
  if os.path.basename(fullpath) not in allNames:
    allNames[os.path.basename(fullpath).lower()] = [ os.path.dirname(fullpath) ]
  else:
    allNames[os.path.basename(fullpath).lower()].append(os.path.dirname(fullpath))

for base, dirs in allNames.items():
  if len(dirs) > 1:
    print(base, 'found in', dirs)

